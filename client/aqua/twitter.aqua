
import "@fluencelabs/aqua-lib/builtin.aqua"
import "identity-link-router.aqua"
import "twitter-identity-link-service.aqua"
import "requester.aqua"

data Router:
  routerPeerId: PeerId
  routerServiceId: string
  identityLinkServiceId: string

data TwitterRequestPayload:
  req: TwitterRequest
  requestId: string
  reqPeer: RequesterPeer

data TwitterVerifyPayload:
  req: TwitterVerify
  requestId: string
  reqPeer: RequesterPeer

func requestTwitter(router: Router, payload: TwitterRequestPayload) -> string:
  on router.routerPeerId:
    IdentityLinkRouter router.routerServiceId
    s <- IdentityLinkRouter.get_service(router.identityLinkServiceId)
  if s.code != 200:
    <- s.error
  
  on s.routing.peer_id via s.routing.relay_peer_id:
    TwitterIdentityLinkService s.routing.service_id
    TwitterIdentityLinkService.twitterRequest(payload.req, payload.requestId, payload.reqPeer)
  <- ""

func verifyTwitter(router: Router, payload: TwitterVerifyPayload) -> string:
  on router.routerPeerId:
    IdentityLinkRouter router.routerServiceId
    s <- IdentityLinkRouter.get_service(router.identityLinkServiceId)
  if s.code != 200:
    <- s.error
  
  on s.routing.peer_id via s.routing.relay_peer_id:
    TwitterIdentityLinkService s.routing.service_id
    TwitterIdentityLinkService.twitterVerify(payload.req, payload.requestId, payload.reqPeer)
  <- ""