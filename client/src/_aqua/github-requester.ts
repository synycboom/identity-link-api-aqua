/**
 *
 * This file is auto-generated. Do not edit manually: changes may be erased.
 * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
 * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
 * Aqua version: 0.4.1-240
 *
 */
import { Fluence, FluencePeer } from '@fluencelabs/fluence';
import {
    CallParams,
    callFunction,
    registerService,
} from '@fluencelabs/fluence/dist/internal/compilerSupport/v2';


// Services

export interface GithubRequesterDef {
    onRequestResult: (res: { code: number; data: { challengeCode: string; }; error: string; requestId: string; }, callParams: CallParams<'res'>) => void | Promise<void>;
    onVerifyResult: (res: { code: number; data: { attestation: string; }; error: string; requestId: string; }, callParams: CallParams<'res'>) => void | Promise<void>;
}
export function registerGithubRequester(service: GithubRequesterDef): void;
export function registerGithubRequester(serviceId: string, service: GithubRequesterDef): void;
export function registerGithubRequester(peer: FluencePeer, service: GithubRequesterDef): void;
export function registerGithubRequester(peer: FluencePeer, serviceId: string, service: GithubRequesterDef): void;
       

export function registerGithubRequester(...args: any) {
    registerService(
        args,
        {
    "defaultServiceId" : "github-requester",
    "functions" : [
        {
            "functionName" : "onRequestResult",
            "argDefs" : [
                {
                    "name" : "res",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "void"
            }
        },
        {
            "functionName" : "onVerifyResult",
            "argDefs" : [
                {
                    "name" : "res",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "void"
            }
        }
    ]
}
    );
}
      
// Functions

